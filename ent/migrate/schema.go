// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CodesColumns holds the columns for the "codes" table.
	CodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "content", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "expired_at", Type: field.TypeTime},
	}
	// CodesTable holds the schema information for the "codes" table.
	CodesTable = &schema.Table{
		Name:       "codes",
		Columns:    CodesColumns,
		PrimaryKey: []*schema.Column{CodesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "code_user_id",
				Unique:  false,
				Columns: []*schema.Column{CodesColumns[1]},
			},
			{
				Name:    "code_expired_at",
				Unique:  false,
				Columns: []*schema.Column{CodesColumns[5]},
			},
		},
	}
	// HistoriesColumns holds the columns for the "histories" table.
	HistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "event", Type: field.TypeString},
		{Name: "ip", Type: field.TypeString, Nullable: true},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
	}
	// HistoriesTable holds the schema information for the "histories" table.
	HistoriesTable = &schema.Table{
		Name:       "histories",
		Columns:    HistoriesColumns,
		PrimaryKey: []*schema.Column{HistoriesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "history_user_id",
				Unique:  false,
				Columns: []*schema.Column{HistoriesColumns[1]},
			},
			{
				Name:    "history_event",
				Unique:  false,
				Columns: []*schema.Column{HistoriesColumns[3]},
			},
			{
				Name:    "history_created_at",
				Unique:  false,
				Columns: []*schema.Column{HistoriesColumns[2]},
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "token", Type: field.TypeString},
		{Name: "ip", Type: field.TypeString},
		{Name: "user_agent", Type: field.TypeString},
		{Name: "device_id", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "expired_at", Type: field.TypeTime},
		{Name: "is_active", Type: field.TypeBool, Default: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "session_user_id",
				Unique:  false,
				Columns: []*schema.Column{SessionsColumns[1]},
			},
			{
				Name:    "session_token",
				Unique:  false,
				Columns: []*schema.Column{SessionsColumns[2]},
			},
			{
				Name:    "session_expired_at",
				Unique:  false,
				Columns: []*schema.Column{SessionsColumns[8]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "telegram_chat_id", Type: field.TypeString, Nullable: true},
		{Name: "password_hash", Type: field.TypeString, Nullable: true},
		{Name: "password_reset", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "deactivated_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_type",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[2]},
			},
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[3]},
			},
			{
				Name:    "user_phone",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CodesTable,
		HistoriesTable,
		SessionsTable,
		UsersTable,
	}
)

func init() {
}
